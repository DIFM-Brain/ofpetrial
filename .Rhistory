ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot))))
class(machine_table)
# machine_poly <- machine_table$machine_poly[[1]]
# sections_used <- machine_table$sections_used[[1]]
# move_vec <- machine_table$move_vec[[1]]
# width <- machine_table$width[[1]]
# crs <- st_crs(machine_table$trial_plot[[1]])
make_section_polygon <- function(width, machine_poly, sections_used, move_vec, crs) {
if(sections_used >1){
perp_move_vec <- rotate_vec(move_vec, 90)
width_section <- width/sections_used
polys <- list()
for (i in 1:sections_used) {
coords <- st_coordinates(machine_poly)[c(2, 3, 11, 12, 2), 1:2]
first_top <- coords[2,] + perp_move_vec * width_section * (i - 1)
first_bottom <- coords[1,] + perp_move_vec * width_section * (i - 1)
next_top <- coords[2,] + perp_move_vec * width_section * i
next_bottom <- coords[1,] + perp_move_vec * width_section * i
polys[[i]] <- list(
rbind(first_bottom,
first_top,
next_top,
next_bottom,
first_bottom)) %>%
st_polygon() %>%
st_sfc(crs = crs) %>%
st_sf()
}else{
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(machine_poly, sections_used, move_vec, st_crs(trial_plot))))
# machine_poly <- machine_table$machine_poly[[1]]
# sections_used <- machine_table$sections_used[[1]]
# move_vec <- machine_table$move_vec[[1]]
# width <- machine_table$width[[1]]
# crs <- st_crs(machine_table$trial_plot[[1]])
make_section_polygon <- function(width, machine_poly, sections_used, move_vec, crs) {
if(sections_used >1){
perp_move_vec <- rotate_vec(move_vec, 90)
width_section <- width/sections_used
polys <- list()
for (i in 1:sections_used) {
coords <- st_coordinates(machine_poly)[c(2, 3, 11, 12, 2), 1:2]
first_top <- coords[2,] + perp_move_vec * width_section * (i - 1)
first_bottom <- coords[1,] + perp_move_vec * width_section * (i - 1)
next_top <- coords[2,] + perp_move_vec * width_section * i
next_bottom <- coords[1,] + perp_move_vec * width_section * i
polys[[i]] <- list(
rbind(first_bottom,
first_top,
next_top,
next_bottom,
first_bottom)) %>%
st_polygon() %>%
st_sfc(crs = crs) %>%
st_sf()
}
polygon_sf <- do.call(rbind, polys)
}else{
polygon_sf <- NULL
}
return(polygon_sf)
}
# machine_poly <- machine_table$machine_poly[[1]]
# sections_used <- machine_table$sections_used[[1]]
# move_vec <- machine_table$move_vec[[1]]
# width <- machine_table$width[[1]]
# crs <- st_crs(machine_table$trial_plot[[1]])
make_section_polygon <- function(width, machine_poly, sections_used, move_vec, crs) {
if(sections_used > 1){
perp_move_vec <- rotate_vec(move_vec, 90)
width_section <- width/sections_used
polys <- list()
for (i in 1:sections_used) {
coords <- st_coordinates(machine_poly)[c(2, 3, 11, 12, 2), 1:2]
first_top <- coords[2,] + perp_move_vec * width_section * (i - 1)
first_bottom <- coords[1,] + perp_move_vec * width_section * (i - 1)
next_top <- coords[2,] + perp_move_vec * width_section * i
next_bottom <- coords[1,] + perp_move_vec * width_section * i
polys[[i]] <- list(
rbind(first_bottom,
first_top,
next_top,
next_bottom,
first_bottom)) %>%
st_polygon() %>%
st_sfc(crs = crs) %>%
st_sf()
}
polygon_sf <- do.call(rbind, polys)
}else{
polygon_sf <- NULL
}
return(polygon_sf)
}
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(machine_poly, sections_used, move_vec, st_crs(trial_plot))))
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot))))
saveRDS(machine_poly, "/Users/brittaniedge/Library/Mobile Documents/com~apple~CloudDocs/Documents/R Package Work/machine_table.rds")
saveRDS(machine_table, "/Users/brittaniedge/Library/Mobile Documents/com~apple~CloudDocs/Documents/R Package Work/machine_table.rds")
machine_table <- readRDS("/Users/brittaniedge/Library/Mobile Documents/com~apple~CloudDocs/Documents/R Package Work/machine_table.rds")
View(machine_table)
machine_table %>%
mutate(sections_poly = list(make_section_polygon(machine_poly, sections_used, move_vec, st_crs(trial_plot))))
class(machine_table)
machine_table$sections_used
length(machine_table$sections_used)
machine_table$sections_used[[1]]
length(machine_table$sections_used[[1]])
# line I'm trying to run
machine_table %>%
mutate(sections_poly = list(make_section_polygon(machine_poly, sections_used, move_vec, st_crs(trial_plot))))
if (nrow(td) == 1) {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]])
) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("applicator", "planter", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
} else {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
}
# section_poly <- polygon_sf
# trial_plot <- machine_table$trial_plot[[1]]
tmap_sections <- function(section_poly, trial_plot) {
if(is.null("section_poly") == FALSE){
tm_shape(section_poly, bbox = st_bbox(trial_plot)) +
tm_borders(col = "grey18", lwd = 2, lty = "dotted")
}
}
if (nrow(td) == 1) {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]])
) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("applicator", "planter", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
} else {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
}
# section_poly <- polygon_sf
# trial_plot <- machine_table$trial_plot[[1]]
tmap_sections <- function(section_poly, trial_plot) {
if(is.null("section_poly") == FALSE){
tm_shape(section_poly, bbox = st_bbox(trial_plot)) +
tm_borders(col = "grey18", lwd = 2, lty = "dotted")
}else{
""
}
}
if (nrow(td) == 1) {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]])
) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("applicator", "planter", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
} else {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
}
```{r machine-alignment-1, echo=FALSE, fig.cap = paste0("Alignment of ", str_to_title(machine_table$machine_type[[1]]), " inside a Trial Plot"), fig.height=6, message=FALSE, warning=FALSE, include = TRUE}
ab_maps <- list()
poly_maps <- list()
section_maps <- list()
label_maps <- list()
colors <- vector()
labels_ablines <- vector()
labels_polygons <- vector()
for (i in 1:(nrow(machine_table) - 1)) {
ab_maps[[i]] <- paste0("machine_table$map_ab[[", i, "]]")
poly_maps[[i]] <- paste0("machine_table$map_poly[[", i, "]]")
section_maps[[i]] <- paste0("machine_table$section_poly[[", i, "]]")
label_maps[[i]] <- paste0("machine_table$map_label[[", i, "]]")
colors[i] <-  if(machine_table$machine_type[i] == "applicator"){"#0072B2"}else if(machine_table$machine_type[i] == "planter"){"#009E73"}else{"#E69F00"}
labels_polygons[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator"}else if(machine_table$machine_type[i] == "planter"){"Planter"}else{"Harvester"}
labels_ablines[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator AB-Line"}else if(machine_table$machine_type[i] == "planter"){"Planter AB-Line"}else{"Harvester AB-Line"}
}
paste0(section_maps, collapse = " + ")
eval(parse(text = paste0(section_maps, collapse = " + ")))
machine_table$map_plot[[1]] +
eval(parse(text = paste0(ab_maps, collapse = " + "))) +
eval(parse(text = paste0(poly_maps, collapse = " + "))) +
eval(parse(text = paste0(section_maps, collapse = " + ")))
for (i in 1:(nrow(machine_table) - 1)) {
ab_maps[[i]] <- paste0("machine_table$map_ab[[", i, "]]")
poly_maps[[i]] <- paste0("machine_table$map_poly[[", i, "]]")
section_maps[[i]] <- paste0("machine_table$sections_poly[[", i, "]]")
label_maps[[i]] <- paste0("machine_table$map_label[[", i, "]]")
colors[i] <-  if(machine_table$machine_type[i] == "applicator"){"#0072B2"}else if(machine_table$machine_type[i] == "planter"){"#009E73"}else{"#E69F00"}
labels_polygons[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator"}else if(machine_table$machine_type[i] == "planter"){"Planter"}else{"Harvester"}
labels_ablines[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator AB-Line"}else if(machine_table$machine_type[i] == "planter"){"Planter AB-Line"}else{"Harvester AB-Line"}
}
machine_table$map_plot[[1]] +
eval(parse(text = paste0(ab_maps, collapse = " + "))) +
eval(parse(text = paste0(poly_maps, collapse = " + "))) +
eval(parse(text = paste0(section_maps, collapse = " + ")))
eval(parse(text = paste0(section_maps, collapse = " + ")))
section_maps
eval(parse(text = section_maps[[1]]))
ab_maps <- list()
poly_maps <- list()
section_maps <- list()
label_maps <- list()
colors <- vector()
labels_ablines <- vector()
labels_polygons <- vector()
for (i in 1:(nrow(machine_table) - 1)) {
ab_maps[[i]] <- paste0("machine_table$map_ab[[", i, "]]")
poly_maps[[i]] <- paste0("machine_table$map_poly[[", i, "]]")
section_maps[[i]] <- paste0("machine_table$map_sections[[", i, "]]")
label_maps[[i]] <- paste0("machine_table$map_label[[", i, "]]")
colors[i] <-  if(machine_table$machine_type[i] == "applicator"){"#0072B2"}else if(machine_table$machine_type[i] == "planter"){"#009E73"}else{"#E69F00"}
labels_polygons[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator"}else if(machine_table$machine_type[i] == "planter"){"Planter"}else{"Harvester"}
labels_ablines[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator AB-Line"}else if(machine_table$machine_type[i] == "planter"){"Planter AB-Line"}else{"Harvester AB-Line"}
}
machine_table$map_plot[[1]] +
eval(parse(text = paste0(ab_maps, collapse = " + "))) +
eval(parse(text = paste0(poly_maps, collapse = " + "))) +
eval(parse(text = paste0(section_maps, collapse = " + ")))
machine_table$map_plot[[1]]
# section_poly <- polygon_sf
# trial_plot <- machine_table$trial_plot[[1]]
tmap_sections <- function(section_poly, trial_plot) {
if(is.null(section_poly) == FALSE){
tm_shape(section_poly, bbox = st_bbox(trial_plot)) +
tm_borders(col = "grey18", lwd = 2, lty = "dotted")
}else{
""
}
}
if (nrow(td) == 1) {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]])
) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("applicator", "planter", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
} else {
machine_table <- data.table(
width = c(td$harvester_width[1], td$machine_width),
input_name = c("NA", td$input_name),
machine_type = c("harvester", ifelse(td$input_name == "seed", "planter", "applicator")),
ab_line = list(td$harvest_ab_lines[[1]][1, ], td$ab_lines[[1]], td$ab_lines[[2]])
) %>%
mutate(number_in_plot = c(max(all_trial_info$num_harv_pass_in_plot), ceiling(all_trial_info$machines_in_plot))) %>%
mutate(sections_used = c(1, (1/all_trial_info$machines_in_plot))) %>%
mutate(height = max(width) / 4) %>%
.[, machine_type := factor(machine_type, levels = c("planter", "applicator", "harvester"))] %>%
setorder(., cols = "machine_type") %>%
mutate(machine_id = row_number()) %>%
rowwise() %>%
mutate(trial_plot = list(plots)) %>%
mutate(move_vec = list(get_move_vec(ab_line))) %>%
mutate(center = list(find_center(ab_line, number_in_plot, trial_plot, move_vec, machine_id, width, height))) %>%
mutate(machine_poly = list(make_machine_polygon(width, height, center, move_vec, st_crs(trial_plot)))) %>%
mutate(sections_poly = list(make_section_polygon(width, machine_poly, sections_used, move_vec, st_crs(trial_plot)))) %>%
mutate(map_ab = list(tmap_abline(ab_line, machine_type, trial_plot))) %>%
mutate(map_poly = list(tmap_machine(machine_poly, machine_type, trial_plot))) %>%
mutate(map_sections = list(tmap_sections(sections_poly, trial_plot))) %>%
mutate(map_label = list(tmap_label(center, machine_type, trial_plot))) %>%
mutate(map_plot = list(tmap_plot(trial_plot))) %>%
mutate(plot_legend = list(tmap_plot_legend(trial_plot)))
}
ab_maps <- list()
poly_maps <- list()
section_maps <- list()
label_maps <- list()
colors <- vector()
labels_ablines <- vector()
labels_polygons <- vector()
for (i in 1:(nrow(machine_table) - 1)) {
ab_maps[[i]] <- paste0("machine_table$map_ab[[", i, "]]")
poly_maps[[i]] <- paste0("machine_table$map_poly[[", i, "]]")
section_maps[[i]] <- paste0("machine_table$map_sections[[", i, "]]")
label_maps[[i]] <- paste0("machine_table$map_label[[", i, "]]")
colors[i] <-  if(machine_table$machine_type[i] == "applicator"){"#0072B2"}else if(machine_table$machine_type[i] == "planter"){"#009E73"}else{"#E69F00"}
labels_polygons[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator"}else if(machine_table$machine_type[i] == "planter"){"Planter"}else{"Harvester"}
labels_ablines[i] <- if(machine_table$machine_type[i] == "applicator"){"Applicator AB-Line"}else if(machine_table$machine_type[i] == "planter"){"Planter AB-Line"}else{"Harvester AB-Line"}
}
machine_table$map_plot[[1]] +
eval(parse(text = paste0(ab_maps, collapse = " + "))) +
eval(parse(text = paste0(poly_maps, collapse = " + "))) +
eval(parse(text = paste0(section_maps, collapse = " + ")))
machine_table$map_plot[[1]] +
eval(parse(text = paste0(ab_maps, collapse = " + "))) +
eval(parse(text = paste0(poly_maps, collapse = " + "))) +
eval(parse(text = paste0(section_maps, collapse = " + "))) +
eval(parse(text = paste0(label_maps, collapse = " + "))) +
tm_add_legend(
type = "line",
labels = na.omit(labels_ablines),
col = na.omit(colors),
lty = c("dashed"),
title = "AB-Lines",
size = 2
) +
tm_add_legend(
type = "symbol",
labels = na.omit(labels_polygons),
col = na.omit(colors),
shape = 0,
title = "Machine Polygons",
size = 2
) +
machine_table$plot_legend[[1]] +
tm_layout(
legend.outside = TRUE,
frame = FALSE,
bg.color = "grey85",
legend.title.size = 2,
legend.text.size = 1.5
)
